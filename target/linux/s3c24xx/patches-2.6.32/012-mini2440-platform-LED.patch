--- a/arch/arm/mach-s3c2440/mach-mini2440.c.orig	2011-05-06 02:35:46.000000000 -0400
+++ a/arch/arm/mach-s3c2440/mach-mini2440.c	2011-05-06 11:00:05.000000000 -0400
@@ -53,6 +53,7 @@
 #include <mach/regs-gpio.h>
 #include <mach/regs-lcd.h>
 #include <mach/leds-gpio.h>
+#include <linux/leds.h>
 #include <mach/idle.h>
 #include <mach/fb.h>
 
@@ -389,6 +390,46 @@
    .ocr_avail     = MMC_VDD_32_33|MMC_VDD_33_34,
 };
 
+//LED
+static struct gpio_led mini2440_led_pins[] = {
+	{
+		.name		= "LED1",
+		.gpio		= S3C2410_GPB(5),
+		.active_low	= true,
+	},
+	{
+		.name		= "LED2",
+		.gpio		= S3C2410_GPB(6) ,
+		.active_low	= true,
+	},
+	{
+		.name		= "LED3",
+		.gpio		= S3C2410_GPB(7),
+		.active_low	= true,
+	},
+	{
+		.name		= "LED4",
+		.gpio		= S3C2410_GPB(8),
+		.active_low	= true,
+	},
+};
+
+static struct gpio_led_platform_data mini2440_led_data = {
+	.num_leds		= ARRAY_SIZE(mini2440_led_pins),
+	.leds			= mini2440_led_pins,
+};
+
+static struct platform_device mini2440_leds = {
+	.name			= "leds-gpio",
+	.id			= -1,
+	.dev.platform_data	= &mini2440_led_data,
+};
+
+
+static struct resource gpiodev_resource = {
+	.start			= 0xFFFFFFFF,
+};
+
 
 /* devices we initialise */
 
@@ -404,8 +445,10 @@
 	&s3c_device_nand,
 	&s3c_device_sdi,
 	&s3c_device_usbgadget,
+	&mini2440_leds,
 };
 
+
 static void __init mini2440_map_io(void)
 {
 	s3c24xx_init_io(mini2440_iodesc, ARRAY_SIZE(mini2440_iodesc));
@@ -425,6 +468,7 @@
 	s3c_device_nand.dev.platform_data = &friendly_arm_nand_info;
 	s3c_device_sdi.dev.platform_data = &mini2440_mmc_cfg;
 	platform_add_devices(mini2440_devices, ARRAY_SIZE(mini2440_devices));
+	platform_device_register_simple("GPIODEV", 0, &gpiodev_resource, 1); //GPIO resource MAP
 	s3c_pm_init();
 }
 
